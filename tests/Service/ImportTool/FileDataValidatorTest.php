<?php

declare(strict_types=1);

namespace App\Tests\Service\ImportTool;

use App\Repository\ProductRepository;
use App\Service\Reporter\FileImportReporter;
use App\Service\ImportTool\FileDataValidator;
use PHPUnit\Framework\TestCase;

class FileDataValidatorTest extends TestCase
{
    /**
     * @var FileDataValidator
     */
    private $validator;

    /**
     * @var array
     */
    private $dataToValidate;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $mockReporter = $this->getMockBuilder(FileImportReporter::class)->getMock();

        $mockProductRepository = $this->getMockBuilder(ProductRepository::class)
                                ->disableOriginalConstructor()
                                ->getMock();

        $this->validator = new FileDataValidator($mockReporter, $mockProductRepository);

        $this->dataToValidate = ([
            'Product Name' => null,
            'Product Description' => null,
            'Product Code' => null,
            'Stock' => null,
            'Cost in GBP' => null,
            'Discontinued' => null
        ]);
    }

    /**
     * @param $name
     * @param $description
     * @param $code
     * @param $discontinued
     * @param $stock
     * @param $cost
     *
     * @dataProvider provideDataToValidate
     */
    public function testValidate($name, $description, $code, $discontinued, $stock, $cost)
    {
        $this->dataToValidate['Product Name'] = $name;
        $this->dataToValidate['Product Description'] = $description;
        $this->dataToValidate['Product Code'] = $code;
        $this->dataToValidate['Stock'] = $stock;
        $this->dataToValidate['Cost in GBP'] = $cost;
        $this->dataToValidate['Discontinued'] = $discontinued;

        $isValidData = $this->validator->validate($this->dataToValidate);

        $this->assertSame(true, $isValidData);
    }

    public function provideDataToValidate()
    {
        return[
            [null, 'Invalid Name in this one', 'testCode0000', 'yes', 9, 100],
            ['Invalid Product', 'because of cost and stock', 'testCode0001', '', 4, 3],
            ['Valid Product', 'Descr.', 'testCode0002', '', 20, 10],
            [null, null, null, null, 50, 100]
        ];
    }
}
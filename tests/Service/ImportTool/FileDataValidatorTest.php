<?php

declare(strict_types=1);

namespace App\Tests\Service\ImportTool;

use App\Repository\ProductRepository;
use App\Service\Reporter\FileImportReporter;
use App\Service\ImportTool\FileDataValidator;
use PHPUnit\Framework\TestCase;

class FileDataValidatorTest extends TestCase
{
    /**
     * @var FileDataValidator
     */
    private $validator;

    /**
     * @var array
     */
    private $dataToValidate;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $mockReporter = $this->getMockBuilder(FileImportReporter::class)->getMock();

        $mockProductRepository = $this->getMockBuilder(ProductRepository::class)
                                ->disableOriginalConstructor()
                                ->getMock();

        $this->validator = new FileDataValidator($mockReporter, $mockProductRepository);

        $this->dataToValidate = ([
            'Product Name' => 'Action',
            'Product Description' => 'he is stupid but cute',
            'Product Code' => 'JustCode0000',
            'Stock' => 100,
            'Cost in GBP' => 25,
            'Discontinued' => 'yes'
        ]);
    }

    public function testValidate()
    {
        $isValidData = $this->validator->validate($this->dataToValidate);

        $this->assertSame(true, $isValidData);

        $this->dataToValidate['Stock'] = 2;
        $this->dataToValidate['Cost in GBP'] = 10000;

        $isValidData = $this->validator->validate($this->dataToValidate);

        $this->assertSame(false, $isValidData);

    }
}